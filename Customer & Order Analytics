#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

#1. How many orders were placed in January? 
SELECT count(orderID) 
FROM BIT_DB.JanSales 
WHERE length(orderID) = 6
AND orderid <> 'Order ID';


#2. How many of those orders were for an iPhone?
SELECT count(orderID) 
FROM BIT_DB.JanSales 
WHERE product= 'iPhone'
AND length(orderID) = 6
AND orderid <> 'Order ID';


#3. Select the customer account numbers for all the orders that were placed in February. 
SELECT DISTINCT acctnum 
FROM BIT_DB.customers cs
INNER JOIN BIT_DB.FebSales FS
ON cs.order_id = FS.orderID
WHERE length(orderID) = 6
AND orderid <> 'Order ID';


#4. Which product was the cheapest one sold in January, and what was the price? 
SELECT distinct product, price 
FROM BIT_DB.JanSales
WHERE price IN (SELECT MIN(price) 
                FROM BIT_DB.JanSales);
                

#5. What is the total revenue for each product sold in January?
SELECT ROUND(SUM(quantity)*price) AS revenue
       , product
FROM BIT_DB.JanSales
GROUP BY product;


#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT SUM(quantity)
       ,product
       ,ROUND(SUM(quantity)*price) AS revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;


#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
SELECT COUNT(distinct cs.acctnum)
      , ROUND(AVG(quantity)*price,2)
      AS avg_amt_spent 
FROM BIT_DB.FebSales FS
LEFT JOIN BIT_DB.customers cs
ON cs.order_id = fs.orderID
WHERE FS.quantity > 2
AND length(orderid) = 6
AND orderid <> 'Order ID';


#8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT product
      , SUM(quantity)
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY product;
