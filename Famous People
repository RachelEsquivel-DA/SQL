--In this project, you’re going to make your own table with some small set of “famous people”, then make more tables about things they do and join those to create nice human readable lists.
For example, here are types of famous people and the questions your data could answer:
Movie stars: What movies are they in? Are they married to each other? Do the co-star in the same movies?

CREATE TABLE moviestars (id INTEGER PRIMARY KEY AUTOINCREMENT, fullname TEXT, age NUMERIC, married TEXT);

INSERT INTO moviestars (fullname, age, married) VALUES ("Blake Lively", 36, "Yes");
INSERT INTO moviestars (fullname, age, married) VALUES ("Ryan Reynolds", 47, "Yes");
INSERT INTO moviestars (fullname, age, married) VALUES ("Eva Mendes", 49, "Yes");
INSERT INTO moviestars (fullname, age, married) VALUES ("Ryan Gosling", 43, "Yes");
INSERT INTO moviestars (fullname, age, married) VALUES ("Penelope Cruz", 49, "Yes");
INSERT INTO moviestars (fullname, age, married) VALUES ("Javier Bardem", 54, "Yes");
INSERT INTO moviestars (fullname, age, married) VALUES ("Will Smith", 55, "Yes");
INSERT INTO moviestars (fullname, age, married) VALUES ("Jada Pinkett Smith", 52, "Yes");
INSERT INTO moviestars (fullname, age, married) VALUES ("Queen Latifa", 53, "No");
INSERT INTO moviestars (fullname, age, married) VALUES ("Tom Cruise", 61, "No");
INSERT INTO moviestars (fullname, age, married) VALUES ("Brian Cranston", 67, "Yes");
INSERT INTO moviestars (fullname, age, married) VALUES ("Morena Baccarin", 44, "Yes");
INSERT INTO moviestars (fullname, age, married) VALUES ("Daniel Craig", 55, "Yes");
INSERT INTO moviestars (fullname, age, married) VALUES ("Rachel Weisz",53, "Yes");
INSERT INTO moviestars (fullname, age, married) VALUES ("Brenden Fraser", 55, "No");
INSERT INTO moviestars (fullname, age, married) VALUES ("Harrison Ford", 81, "Yes");


CREATE TABLE movies (movie_id INTEGER PRIMARY KEY AUTOINCREMENT, title TEXT, moviestar_id NUMERIC);

INSERT INTO movies (title, moviestar_id) VALUES ("Age of Adeline", 1);
INSERT INTO movies (title, moviestar_id) VALUES ("Deadpool", 2);
INSERT INTO movies (title, moviestar_id) VALUES ("Drive", 4);
INSERT INTO movies (title, moviestar_id) VALUES ("Hitch", 3);
INSERT INTO movies (title, moviestar_id) VALUES ("Skyfall", 6);
INSERT INTO movies (title, moviestar_id) VALUES ("Vanilla Sky", 5);
INSERT INTO movies (title, moviestar_id) VALUES ("Hitch", 7);
INSERT INTO movies (title, moviestar_id) VALUES ("Set It Off", 8);
INSERT INTO movies (title, moviestar_id) VALUES ("Set It Off", 9);
INSERT INTO movies (title, moviestar_id) VALUES ("Drive", 11);
INSERT INTO movies (title, moviestar_id) VALUES ("Vanilla Sky", 10);
INSERT INTO movies (title, moviestar_id) VALUES ("Deadpool", 12);
INSERT INTO movies (title, moviestar_id) VALUES ("Skyfall", 13);
INSERT INTO movies (title, moviestar_id) VALUES ("The Mummy", 14);
INSERT INTO movies (title, moviestar_id) VALUES ("The Mummy", 15);
INSERT INTO movies (title, moviestar_id) VALUES ("Age of Adeline", 16);

CREATE TABLE celebcouples (couple_id INTEGER PRIMARY KEY AUTOINCREMENT, moviestar_id NUMERIC, spouse_id NUMERIC);

INSERT INTO celebcouples (moviestar_id, spouse_id) VALUES (1,2);
INSERT INTO celebcouples (moviestar_id, spouse_id) VALUES (3,4);
INSERT INTO celebcouples (moviestar_id, spouse_id) VALUES (5,6);
INSERT INTO celebcouples (moviestar_id, spouse_id) VALUES (14,13);
INSERT INTO celebcouples (moviestar_id, spouse_id) VALUES (8,7);

CREATE TABLE co_stars (movie_id NUMERIC, moviestar_id NUMERIC, co_star_id NUMERIC);

INSERT INTO co_stars (movie_id, moviestar_id, co_star_id) VALUES (2,2,12);
INSERT INTO co_stars (movie_id, moviestar_id, co_star_id) VALUES (3,4,11);
INSERT INTO co_stars (movie_id, moviestar_id, co_star_id) VALUES (4,7,3);
INSERT INTO co_stars (movie_id, moviestar_id, co_star_id) VALUES (5,13,6);
INSERT INTO co_stars (movie_id, moviestar_id, co_star_id) VALUES (6,10,5);
INSERT INTO co_stars (movie_id, moviestar_id, co_star_id) VALUES (8,8,9);
INSERT INTO co_stars (movie_id, moviestar_id, co_star_id) VALUES (14,15,14);
INSERT INTO co_stars (movie_id, moviestar_id, co_star_id) VALUES (1,1,16);

SELECT * FROM moviestars;


--Show left join
SELECT m.title AS movie, ms.fullname AS staring FROM movies m
LEFT JOIN moviestars ms
ON m.moviestar_id = ms.id
ORDER BY m.title;

--Show a self join
SELECT celebcouples.couple_id, a.fullname AS wife, b.fullname AS husband FROM celebcouples
JOIN moviestars a
ON celebcouples.moviestar_id = a.id
JOIN moviestars b
ON celebcouples.spouse_id = b.id;

--Show a left join AND a self join, order by movie
SELECT m.title AS movie, msa.fullname AS star, msb.fullname AS costar
FROM movies m
LEFT JOIN co_stars cs
ON m.movie_id = cs.movie_id
JOIN moviestars msa
ON msa.id = cs.moviestar_id
JOIN moviestars msb
ON msb.id = cs.co_star_id
ORDER BY m.title;

